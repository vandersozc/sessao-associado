package br.com.vcampanholi.domain.sessaovoto;import br.com.vcampanholi.domain.sessaovoto.validator.CpfValidator;import org.junit.jupiter.api.Test;import org.junit.jupiter.api.extension.ExtendWith;import org.springframework.test.context.junit.jupiter.SpringExtension;import java.util.stream.Stream;import static org.junit.jupiter.api.Assertions.assertFalse;import static org.junit.jupiter.api.Assertions.assertTrue;@ExtendWith(SpringExtension.class)class CpfValidatorTest {    @Test    void deveRetornarFalseQuandoCpfForNulo() {        assertFalse(CpfValidator.cpfValido(null));    }    @Test    void deveRetornarFalseQuandoCpfForVazio() {        assertFalse(CpfValidator.cpfValido(""));    }    @Test    void deveRetornarFalseQuandoCpfPossuiCaracterDiferenteDeNumeros() {        assertFalse(CpfValidator.cpfValido("487145484c5454o"));    }    @Test    void deveRetornarFalseQuandoCpfPossuiSequenciaInvalida() {        Stream.of("11111111111", "22222222222", "33333333333", "44444444444", "55555555555",                "66666666666", "77777777777", "88888888888", "99999999999")                .forEach(cpf -> assertFalse(CpfValidator.cpfValido(cpf)));    }    @Test    void deveRetornarTrueQuandoCpfForValido() {        assertTrue(CpfValidator.cpfValido("68715238636"));        assertTrue(CpfValidator.cpfValido("22833387512"));    }    @Test    void deveRetornarFalseQuandoCpfForInvalida() {        assertFalse(CpfValidator.cpfValido("38465238636"));        assertFalse(CpfValidator.cpfValido("78945636510"));        assertFalse(CpfValidator.cpfValido("78451221458"));    }    @Test    void deveRetornarFalseQuandoTamanhoDoCpfNaoForMaiorQueEsperado() {        assertFalse(CpfValidator.cpfValido("3846523863686547"));    }    @Test    void deveRetornarFalseQuandoTamanhoDoCpfNaoForMenorQueEsperado() {        assertFalse(CpfValidator.cpfValido("7894"));    }    @Test    void deveRetornarFalseQuandoCpfPossuirCaracteresEspeciais() {        assertFalse(CpfValidator.cpfValido("020.147.852-99"));    }}