package br.com.vcampanholi.api.v1.sessao;import br.com.vcampanholi.api.v1.sessao.facade.SessaoFacade;import br.com.vcampanholi.stubs.SessaoRequestStub;import br.com.vcampanholi.stubs.SessaoResponseStub;import org.junit.jupiter.api.Test;import org.junit.jupiter.api.extension.ExtendWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;import org.springframework.boot.test.mock.mockito.MockBean;import org.springframework.http.MediaType;import org.springframework.test.context.junit.jupiter.SpringExtension;import org.springframework.test.web.servlet.MockMvc;import static br.com.vcampanholi.api.config.ObjectMapperConverter.convertToString;import static org.mockito.ArgumentMatchers.any;import static org.mockito.Mockito.when;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;@ExtendWith(SpringExtension.class)@WebMvcTest(SessaoController.class)class SessaoControllerTest {    @Autowired    private MockMvc mockMvc;    @MockBean    private SessaoFacade sessaoFacade;    @Test    void deveCriarUmaSessaoDaPauta() throws Exception {        when(sessaoFacade.criarSessao(any(), any())).thenReturn(SessaoResponseStub.sessaoResponse());        var sessaoResponse = SessaoResponseStub.sessaoResponse();        var dataHoraAbertura = "2019-09-07T15:10:00";        var dataHoraEncerramento = "2019-09-07T15:11:00";        this.mockMvc.perform(post("/sessao-associado/v1/pauta/1/sessao")                .contentType(MediaType.APPLICATION_JSON)                .content(convertToString(SessaoRequestStub.sessaoRequest()))                .accept(MediaType.APPLICATION_JSON))                .andExpect(status().isOk())                .andExpect(jsonPath("$.id").value(sessaoResponse.getSessaoId()))                .andExpect(jsonPath("$.dataHoraAbertura").value(dataHoraAbertura))                .andExpect(jsonPath("$.dataHoraEncerramento").value(dataHoraEncerramento))                .andExpect(jsonPath("$.pauta.id").value(sessaoResponse.getPauta().getPautaId()));    }}